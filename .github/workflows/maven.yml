# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed byon:
on: # Apenas aciona quando há push para o branch develop
  push:
    branches: [ "develop" ] # Monitora apenas o branch develop

# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and Auto PR

jobs:
  build_and_create_pr: # Nome do job alterado para refletir o objetivo
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # Para criar um PR, a action de checkout precisa buscar o histórico completo
          # e ter permissões para acessar os outros branches.
          # Isso é importante para a action de criação de PR funcionar corretamente.
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Create Pull Request
        id: create_pr # Adiciona um ID para referenciar a saída desta etapa
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Usa o token padrão do GitHub Actions
          commit-message: "Merge develop into main"
          title: "Merge develop into main"
          body: "This PR merges the latest changes from the `develop` branch into `main`."
          base: main # O branch de destino do PR
          head: develop # O branch de origem do PR
          branch: auto-merge-develop-to-main # Nome do branch que a action pode criar temporariamente, se necessário
          # Necessário para que a action não falhe se um PR já existir
          committer: GitHub Actions <actions@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          # Se você quiser que o PR seja automaticamente mesclado quando todos os checks passarem (cuidado com isso!)
          # merge-method: squash
          # assignees: seu-usuario-github # Opcional: atribui o PR a um usuário
          # reviewers: revisor-1,revisor-2 # Opcional: adiciona revisores
          # draft: true # Opcional: cria um PR como rascunho

      - name: Check for PR URL
        if: steps.create_pr.outputs.pull-request-url
        run: |
          echo "Pull Request criada: ${{ steps.create_pr.outputs.pull-request-url }}"
          echo "Pull Request número: ${{ steps.create_pr.outputs.pull-request-number }}"
